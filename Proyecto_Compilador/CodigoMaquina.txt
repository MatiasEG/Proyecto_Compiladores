.CODE
   PUSH mainA
   CALL
   HALT

# ---------------- simple_heap_init ---------------- 
simple_heap_init:RET 0 # Inicializacion simple del .heap

# ---------------- simple_malloc ---------------- 
simple_malloc:LOADFP # Inicializacion unidad
              LOADSP
              STOREFP # Finaliza inicializacion del RA
              LOADHL # hl
              DUP # hl
              PUSH 1
              ADD # hl + 1
              STORE 4 # Guarda resultado (puntero a base del bloque)
              LOAD 3 # Carga cantidad de celdas a alojar (parametro)
              ADD
              STOREHL # Mueve el heap limit (hl)
              STOREFP
              RET 1 # Retorna eliminando el parametro

# ---------------- debugPrintObject ---------------- 
debugPrintObject:LOADFP
                 LOADSP
                 STOREFP
                 LOAD 3
                 STOREFP
                 RET 1

# ---------------- readSystem ---------------- 
readSystem:LOADFP
           LOADSP
           STOREFP
           STOREFP
           RET 0

# ---------------- printBSystem ---------------- 
printBSystem:LOADFP
             LOADSP
             STOREFP
             LOAD 3
             BPRINT
             STOREFP
             RET 1

# ---------------- printCSystem ---------------- 
printCSystem:LOADFP
             LOADSP
             STOREFP
             LOAD 3
             CPRINT
             STOREFP
             RET 1

# ---------------- printISystem ---------------- 
printISystem:LOADFP
             LOADSP
             STOREFP
             LOAD 3
             IPRINT
             STOREFP
             RET 1

# ---------------- printSSystem ---------------- 
printSSystem:LOADFP
             LOADSP
             STOREFP
             LOAD 3
             SPRINT
             STOREFP
             RET 1

# ---------------- printlnSystem ---------------- 
printlnSystem:LOADFP
              LOADSP
              STOREFP
              PRNLN
              STOREFP
              RET 0

# ---------------- printBlnSystem ---------------- 
printBlnSystem:LOADFP
               LOADSP
               STOREFP
               LOAD 3
               BPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printClnSystem ---------------- 
printClnSystem:LOADFP
               LOADSP
               STOREFP
               LOAD 3
               CPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printIlnSystem ---------------- 
printIlnSystem:LOADFP
               LOADSP
               STOREFP
               LOAD 3
               IPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printSlnSystem ---------------- 
printSlnSystem:LOADFP
               LOADSP
               STOREFP
               LOAD 3
               SPRINT
               PRNLN
               STOREFP
               RET 1

.DATA

VT_A: NOP

.CODE

# ---------------- AA ---------------- 
AA:LOADFP
   LOADSP
   STOREFP
   FMEM 0 # Se elimina el espacio reservado para las variables locales.
   STOREFP
   RET 1

# ---------------- reverseAuxA ---------------- 
reverseAuxA:LOADFP
            LOADSP
            STOREFP
            RMEM 1 # Resultado de malloc, referencia al CIR de un objeto
            PUSH 3 # Parametro malloc, cant de atributos del objeto + 1 para VT
            PUSH simple_malloc
            CALL
            DUP # de la referencia al nuevo CIR
            PUSH VT_Pair
            STOREREF 0 # Consume una de las dupicas de la referencia al CIR
            DUP # de la referencia al objeto
            PUSH PairPair
            CALL # Invoco el constructor
            PUSH 10
            LOAD 0 # Apilo el valor de la variable.
            SWAP # Dejo el valor en el tope y la referencia al atributo en tope-1
            STOREREF 1 # Guardo el valor en el atributo
            PUSH 20
            LOAD 0 # Apilo el valor de la variable.
            SWAP # Dejo el valor en el tope y la referencia al atributo en tope-1
            STOREREF 2 # Guardo el valor en el atributo
            FMEM 1 # Libero los lugares de las var locales
            LOAD 0 # Apilo el valor de la variable.
            STORE 4 # Se coloca el valor de retorno en su ubicacion reservada
            STOREFP 
            RET 1 # Efectuamos el retorno liberando la cantidad de parametros
            FMEM 1 # Se elimina el espacio reservado para las variables locales.
            STOREFP
            RET 1

# ---------------- mainA ---------------- 
mainA:LOADFP
      LOADSP
      STOREFP
      PUSH 5
      PUSH 9
      RMEM 1 # Lugar de retorno
      LOAD 0 # Apilo el valor de la variable.
      PUSH reverseA
      CALL
      POP # Llamada con valor no asignado
      RMEM 1 # Lugar de retorno
      LOAD -1 # Apilo el valor de la variable.
      PUSH reverseA
      CALL
      POP # Llamada con valor no asignado
      FMEM 2 # Se elimina el espacio reservado para las variables locales.
      STOREFP
      RET 0

# ---------------- reverseA ---------------- 
reverseA:LOADFP
         LOADSP
         STOREFP
         LOAD 3 # Apilo el valor del parametro.
         PUSH printIlnSystem
         CALL
         FMEM 0 # Libero los lugares de las var locales
         RMEM 1 # Lugar de retorno
         LOAD 3 # Apilo el valor del parametro.
         PUSH reverseAuxA
         CALL
         LOADREF 1 # Cargo el atributo en el tope
         STORE 4 # Se coloca el valor de retorno en su ubicacion reservada
         STOREFP 
         RET 1 # Efectuamos el retorno liberando la cantidad de parametros
         FMEM 0 # Se elimina el espacio reservado para las variables locales.
         STOREFP
         RET 1

.DATA

VT_Pair: NOP

.CODE

# ---------------- PairPair ---------------- 
PairPair:LOADFP
         LOADSP
         STOREFP
         FMEM 0 # Se elimina el espacio reservado para las variables locales.
         STOREFP
         RET 1

