.CODE
   PUSH mainA
   CALL
   HALT

# ---------------- simple_heap_init ---------------- 
simple_heap_init:RET 0 # Inicializacion simple del .heap

# ---------------- simple_malloc ---------------- 
simple_malloc:
              LOADFP # Inicializacion unidad
              LOADSP
              STOREFP # Finaliza inicializacion del RA
              LOADHL # hl
              DUP # hl
              PUSH 1
              ADD # hl + 1
              STORE 4 # Guarda resultado (puntero a base del bloque)
              LOAD 3 # Carga cantidad de celdas a alojar (parametro)
              ADD
              STOREHL # Mueve el heap limit (hl)
              STOREFP
              RET 1 # Retorna eliminando el parametro

# ---------------- debugPrintObject ---------------- 
debugPrintObject:
                 LOADFP
                 LOADSP
                 STOREFP
                 LOAD 3
                 STOREFP
                 RET 1

# ---------------- readSystem ---------------- 
readSystem:
           LOADFP
           LOADSP
           STOREFP
           STOREFP
           RET 0

# ---------------- printBSystem ---------------- 
printBSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             BPRINT
             STOREFP
             RET 1

# ---------------- printCSystem ---------------- 
printCSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             CPRINT
             STOREFP
             RET 1

# ---------------- printISystem ---------------- 
printISystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             IPRINT
             STOREFP
             RET 1

# ---------------- printSSystem ---------------- 
printSSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             SPRINT
             STOREFP
             RET 1

# ---------------- printlnSystem ---------------- 
printlnSystem:
              LOADFP
              LOADSP
              STOREFP
              PRNLN
              STOREFP
              RET 0

# ---------------- printBlnSystem ---------------- 
printBlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               BPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printClnSystem ---------------- 
printClnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               CPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printIlnSystem ---------------- 
printIlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               IPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printSlnSystem ---------------- 
printSlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               SPRINT
               PRNLN
               STOREFP
               RET 1

.DATA

VT_A: NOP

.CODE

# ---------------- AA ---------------- 
AA:
   LOADFP
   LOADSP
   STOREFP
   FMEM 0 # Se elimina el espacio reservado para las variables locales.
   STOREFP
   RET 1

# ---------------- printA ---------------- 
printA:
       LOADFP
       LOADSP
       STOREFP
       PUSH 5
       PUSH 7
       LOAD 3 # Apilo el valor del parametro.
       PUSH printIlnSystem
       CALL
       FMEM 2 # Se elimina el espacio reservado para las variables locales.
       STOREFP
       RET 1

# ---------------- m1A ---------------- 
m1A:
    LOADFP
    LOADSP
    STOREFP
    PUSH 111
    PUSH 222
    PUSH 333
    LOAD 0 # Apilo el valor de la variable.
    PUSH printA
    CALL
    LOAD -1 # Apilo el valor de la variable.
    PUSH printA
    CALL
    LOAD -2 # Apilo el valor de la variable.
    PUSH printA
    CALL
    LOAD 0 # Apilo el valor de la variable.
    LOAD -2 # Apilo el valor de la variable.
    ADD
    PUSH printA
    CALL
    LOAD 3 # Apilo el valor del parametro.
    PUSH 1
    EQ
    BF finIf_0_m1
    FMEM 1 # Libero los lugares de las var locales
    STOREFP
    RET 1 # Efectuamos el retorno liberando la cantidad de parametros
    finIf_0_m1: NOP
    FMEM 1 # Se elimina el espacio reservado para las variables locales.
    LOAD 0 # Apilo el valor de la variable.
    LOAD -1 # Apilo el valor de la variable.
    ADD
    PUSH printA
    CALL
    LOAD 3 # Apilo el valor del parametro.
    PUSH 2
    EQ
    BF finIf_1_m1
    FMEM 1 # Libero los lugares de las var locales
    STOREFP
    RET 1 # Efectuamos el retorno liberando la cantidad de parametros
    finIf_1_m1: NOP
    FMEM 1 # Se elimina el espacio reservado para las variables locales.
    PUSH 111
    LOAD 0 # Apilo el valor de la variable.
    LOAD -1 # Apilo el valor de la variable.
    ADD
    PUSH printA
    CALL
    LOAD 3 # Apilo el valor del parametro.
    PUSH 3
    EQ
    BF finIf_2_m1
    FMEM 1 # Libero los lugares de las var locales
    STOREFP
    RET 1 # Efectuamos el retorno liberando la cantidad de parametros
    finIf_2_m1: NOP
    LOAD 0 # Apilo el valor de la variable.
    PUSH printA
    CALL
    FMEM 2 # Se elimina el espacio reservado para las variables locales.
    STOREFP
    RET 1

# ---------------- mainA ---------------- 
mainA:
      LOADFP
      LOADSP
      STOREFP
      PUSH 1
      PUSH m1A
      CALL
      PUSH printlnSystem
      CALL
      PUSH 2
      PUSH m1A
      CALL
      PUSH printlnSystem
      CALL
      PUSH 3
      PUSH m1A
      CALL
      PUSH printlnSystem
      CALL
      PUSH 4
      PUSH m1A
      CALL
      FMEM 0 # Se elimina el espacio reservado para las variables locales.
      STOREFP
      RET 0

