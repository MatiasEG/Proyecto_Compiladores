.CODE
   PUSH mainMainModule
   CALL
   HALT

# ---------------- simple_heap_init ---------------- 
simple_heap_init:RET 0 # Inicializacion simple del .heap

# ---------------- simple_malloc ---------------- 
simple_malloc:
              LOADFP # Inicializacion unidad
              LOADSP
              STOREFP # Finaliza inicializacion del RA
              LOADHL # hl
              DUP # hl
              PUSH 1
              ADD # hl + 1
              STORE 4 # Guarda resultado (puntero a base del bloque)
              LOAD 3 # Carga cantidad de celdas a alojar (parametro)
              ADD
              STOREHL # Mueve el heap limit (hl)
              STOREFP
              RET 1 # Retorna eliminando el parametro

.DATA

VT_A: DW bMetA

.CODE

# ---------------- AConstructor ---------------- 
AConstructor:
             LOADFP
             LOADSP
             STOREFP
             FMEM 0 # Se elimina el espacio reservado para las variables locales.
             STOREFP
             RET 1

# ---------------- bMetA ---------------- 
bMetA:
      LOADFP
      LOADSP
      STOREFP
      RMEM 1 # Comienzo del String
      PUSH 17 # Lugares del heap
      PUSH simple_malloc
      CALL
      DUP # Ref del comienzo del String
      PUSH 'O'
      STOREREF 0
      DUP # Ref del comienzo del String
      PUSH 'b'
      STOREREF 1
      DUP # Ref del comienzo del String
      PUSH 't'
      STOREREF 2
      DUP # Ref del comienzo del String
      PUSH 'e'
      STOREREF 3
      DUP # Ref del comienzo del String
      PUSH 'n'
      STOREREF 4
      DUP # Ref del comienzo del String
      PUSH 'g'
      STOREREF 5
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 6
      DUP # Ref del comienzo del String
      PUSH ' '
      STOREREF 7
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 8
      DUP # Ref del comienzo del String
      PUSH 'b'
      STOREREF 9
      DUP # Ref del comienzo del String
      PUSH 'j'
      STOREREF 10
      DUP # Ref del comienzo del String
      PUSH 'e'
      STOREREF 11
      DUP # Ref del comienzo del String
      PUSH 't'
      STOREREF 12
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 13
      DUP # Ref del comienzo del String
      PUSH ' '
      STOREREF 14
      DUP # Ref del comienzo del String
      PUSH 'B'
      STOREREF 15
      DUP # Ref del comienzo del String
      PUSH 0 # Caracter terminador
      STOREREF 16
      PUSH printSlnSystem
      CALL
      FMEM 0 # Libero los lugares de las var locales
      RMEM 1 # Resultado de malloc, referencia al CIR de un objeto
      PUSH 2 # Parametro malloc, cant de atributos del objeto + 1 para VT
      PUSH simple_malloc
      CALL
      DUP # de la referencia al nuevo CIR
      PUSH VT_B
      STOREREF 0 # Consume una de las dupicas de la referencia al CIR
      DUP # de la referencia al objeto
      PUSH BConstructor
      CALL # Invoco el constructor
      STORE 4 # Se coloca el valor de retorno en su ubicacion reservada
      STOREFP 
      RET 1 # Efectuamos el retorno liberando la cantidad de parametros
      FMEM 0 # Se elimina el espacio reservado para las variables locales.
      STOREFP
      RET 1

.DATA

VT_B: DW aMetB, enteroB

.CODE

# ---------------- BConstructor ---------------- 
BConstructor:
             LOADFP
             LOADSP
             STOREFP
             FMEM 0 # Se elimina el espacio reservado para las variables locales.
             STOREFP
             RET 1

# ---------------- aMetB ---------------- 
aMetB:
      LOADFP
      LOADSP
      STOREFP
      RMEM 1 # Comienzo del String
      PUSH 17 # Lugares del heap
      PUSH simple_malloc
      CALL
      DUP # Ref del comienzo del String
      PUSH 'O'
      STOREREF 0
      DUP # Ref del comienzo del String
      PUSH 'b'
      STOREREF 1
      DUP # Ref del comienzo del String
      PUSH 't'
      STOREREF 2
      DUP # Ref del comienzo del String
      PUSH 'e'
      STOREREF 3
      DUP # Ref del comienzo del String
      PUSH 'n'
      STOREREF 4
      DUP # Ref del comienzo del String
      PUSH 'g'
      STOREREF 5
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 6
      DUP # Ref del comienzo del String
      PUSH ' '
      STOREREF 7
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 8
      DUP # Ref del comienzo del String
      PUSH 'b'
      STOREREF 9
      DUP # Ref del comienzo del String
      PUSH 'j'
      STOREREF 10
      DUP # Ref del comienzo del String
      PUSH 'e'
      STOREREF 11
      DUP # Ref del comienzo del String
      PUSH 't'
      STOREREF 12
      DUP # Ref del comienzo del String
      PUSH 'o'
      STOREREF 13
      DUP # Ref del comienzo del String
      PUSH ' '
      STOREREF 14
      DUP # Ref del comienzo del String
      PUSH 'A'
      STOREREF 15
      DUP # Ref del comienzo del String
      PUSH 0 # Caracter terminador
      STOREREF 16
      PUSH printSlnSystem
      CALL
      FMEM 0 # Libero los lugares de las var locales
      RMEM 1 # Resultado de malloc, referencia al CIR de un objeto
      PUSH 1 # Parametro malloc, cant de atributos del objeto + 1 para VT
      PUSH simple_malloc
      CALL
      DUP # de la referencia al nuevo CIR
      PUSH VT_A
      STOREREF 0 # Consume una de las dupicas de la referencia al CIR
      DUP # de la referencia al objeto
      PUSH AConstructor
      CALL # Invoco el constructor
      STORE 4 # Se coloca el valor de retorno en su ubicacion reservada
      STOREFP 
      RET 1 # Efectuamos el retorno liberando la cantidad de parametros
      FMEM 0 # Se elimina el espacio reservado para las variables locales.
      STOREFP
      RET 1

# ---------------- enteroB ---------------- 
enteroB:
        LOADFP
        LOADSP
        STOREFP
        FMEM 0 # Libero los lugares de las var locales
        PUSH 5
        PUSH 4
        ADD
        STORE 4 # Se coloca el valor de retorno en su ubicacion reservada
        STOREFP 
        RET 1 # Efectuamos el retorno liberando la cantidad de parametros
        FMEM 0 # Se elimina el espacio reservado para las variables locales.
        STOREFP
        RET 1

.DATA

VT_MainModule: NOP

.CODE

# ---------------- mainMainModule ---------------- 
mainMainModule:
               LOADFP
               LOADSP
               STOREFP
               RMEM 1 # Resultado de malloc, referencia al CIR de un objeto
               PUSH 1 # Parametro malloc, cant de atributos del objeto + 1 para VT
               PUSH simple_malloc
               CALL
               DUP # de la referencia al nuevo CIR
               PUSH VT_A
               STOREREF 0 # Consume una de las dupicas de la referencia al CIR
               DUP # de la referencia al objeto
               PUSH AConstructor
               CALL # Invoco el constructor
               LOAD 0 # Apilo el valor de la variable.
               RMEM 1 # Lugar de retorno
               SWAP # Muevo this al tope de la pila
               DUP # Duplico this
               LOADREF 0 # Consumo un this y lo reemplazo por su VT
               LOADREF 0 # Lugar de retorno
               CALL # Realizo la llamada a metodo dinamico
               RMEM 1 # Lugar de retorno
               SWAP # Muevo this al tope de la pila
               DUP # Duplico this
               LOADREF 0 # Consumo un this y lo reemplazo por su VT
               LOADREF 0 # Lugar de retorno
               CALL # Realizo la llamada a metodo dinamico
               RMEM 1 # Lugar de retorno
               SWAP # Muevo this al tope de la pila
               DUP # Duplico this
               LOADREF 0 # Consumo un this y lo reemplazo por su VT
               LOADREF 0 # Lugar de retorno
               CALL # Realizo la llamada a metodo dinamico
               RMEM 1 # Lugar de retorno
               SWAP # Muevo this al tope de la pila
               DUP # Duplico this
               LOADREF 0 # Consumo un this y lo reemplazo por su VT
               LOADREF 1 # Lugar de retorno
               CALL # Realizo la llamada a metodo dinamico
               PUSH printIlnSystem
               CALL
               FMEM 1 # Se elimina el espacio reservado para las variables locales.
               STOREFP
               RET 0

# ---------------- MainModuleConstructor ---------------- 
MainModuleConstructor:
                      LOADFP
                      LOADSP
                      STOREFP
                      FMEM 0 # Se elimina el espacio reservado para las variables locales.
                      STOREFP
                      RET 1

# ---------------- debugPrintObject ---------------- 
debugPrintObject:
                 LOADFP
                 LOADSP
                 STOREFP
                 LOAD 3
                 IPRINT
                 PRNLN
                 STOREFP
                 RET 1

# ---------------- readSystem ---------------- 
readSystem:
           LOADFP
           LOADSP
           STOREFP
           READ
           STORE 3
           STOREFP
           RET 0

# ---------------- printBSystem ---------------- 
printBSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             BPRINT
             STOREFP
             RET 1

# ---------------- printCSystem ---------------- 
printCSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             CPRINT
             STOREFP
             RET 1

# ---------------- printISystem ---------------- 
printISystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             IPRINT
             STOREFP
             RET 1

# ---------------- printSSystem ---------------- 
printSSystem:
             LOADFP
             LOADSP
             STOREFP
             LOAD 3
             SPRINT
             STOREFP
             RET 1

# ---------------- printlnSystem ---------------- 
printlnSystem:
              LOADFP
              LOADSP
              STOREFP
              PRNLN
              STOREFP
              RET 0

# ---------------- printBlnSystem ---------------- 
printBlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               BPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printClnSystem ---------------- 
printClnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               CPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printIlnSystem ---------------- 
printIlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               IPRINT
               PRNLN
               STOREFP
               RET 1

# ---------------- printSlnSystem ---------------- 
printSlnSystem:
               LOADFP
               LOADSP
               STOREFP
               LOAD 3
               SPRINT
               PRNLN
               STOREFP
               RET 1

